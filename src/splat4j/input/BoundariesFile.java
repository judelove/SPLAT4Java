/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package splat4j.input;

import splat4j.Configuration;
import splat4j.Path;
import splat4j.Site;
import splat4j.SplatEngine;

/**
 *
 * @author Jude Mukundane
 */
public class BoundariesFile {

    private Configuration config;
    private Path path;
    SplatEngine splat;

//    void loadBoundariesFile(Configuration config, String filename) {
//        /* This function reads Cartographic Boundary Files available from
//	   the U.S. Census Bureau, and plots the data contained in those
//	   files on the PPM Map generated by SPLAT!.  Such files contain
//	   the coordinates that describe the boundaries of cities,
//	   counties, and states. */
//
//        int x;
//        double lat0, lon0, lat1, lon1;
//        char string[
//        80];
//	struct site source, destination;
//        FILE * fd = null;
//
//        fd = fopen(filename, "r");
//
//        if (fd != null) {
//            fgets(string, 78, fd);
//
//            fprintf(stdout, "\nReading \"%s\"... ", filename);
//            fflush(stdout);
//
//            do {
//                fgets(string, 78, fd);
//                sscanf(string, "%lf %lf",  & lon0,  & lat0);
//                fgets(string, 78, fd);
//
//                do {
//                    sscanf(string, "%lf %lf",  & lon1,  & lat1);
//
//                    source.lat = lat0;
//                    source.lon = (lon0 > 0.0 ? 360.0 - lon0 : -lon0);
//                    destination.lat = lat1;
//                    destination.lon = (lon1 > 0.0 ? 360.0 - lon1 : -lon1);
//
//                    ReadPath(source, destination);
//
//                    for (x = 0; x < path.length; x++) {
//                        OrMask(path.lat[x], path.lon[x], 4);
//                    }
//
//                    lat0 = lat1;
//                    lon0 = lon1;
//
//                    fgets(string, 78, fd);
//
//                } while (strncmp(string, "END", 3) != 0 && feof(fd) == 0);
//
//                fgets(string, 78, fd);
//
//            } while (strncmp(string, "END", 3) != 0 && feof(fd) == 0);
//
//            fclose(fd);
//
//            fprintf(stdout, "Done!");
//            fflush(stdout);
//        } else {
//            fprintf(stderr, "\n*** ERROR: \"%s\": not found!", filename);
//        }
//    }
//
//    int OrMask(double lat, double lon, int value, Dem[] dem) {
//        /* Lines, text, markings, and coverage areas are stored in a
//	   mask that is combined with topology data when topographic
//	   maps are generated by SPLAT!.  This function sets bits in
//	   the mask based on the latitude and longitude of the area
//	   pointed to. */
//
//        int x, y, indx;
//        boolean found;
//
//        for (indx = 0, found = false; indx < config.MAXPAGES && !found;) {
//            x = (int) Math.rint(splat.getPpd() * (lat - dem[indx].getMinNorth()));
//            y = splat.getMpi() - (int) Math.rint(splat.getPpd() * (lonDiff(dem[indx].getMaxWest(), lon)));
//
//            if (x >= 0 && x <= splat.getMpi() && y >= 0 && y <= splat.getMpi()) {
//                found = true;
//            } else {
//                indx++;
//            }
//        }
//
//        if (found) {
//            dem[indx].mask[x][y] |= value;
//            return ((int) dem[indx].mask[x][y]);
//        } else {
//            return -1;
//        }
//    }

    

   
}
